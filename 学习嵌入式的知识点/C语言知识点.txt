头文件：
#include<stdio.h>
就是指 "standard input & output"(标准输入输出)所以，源代码中如用到标准输入输出函数时，就要包含这个头文件!
#include<math.h>
头文件中声明了常用的一些数学运算，比如乘方，开方运算等等
#include<ctype.h>
是C标准函数库中的头文件，定义了一批C语言字符分类函数(C character classification functions)，用于测试字符是否属于特定的字符类别，如字母字符、控制字符等等。既支持单字节(Byte)字符，也支持宽字符。


第一章
1.标识符的构成：
字母、数字、下划线且首位置为字幕或下划线。
合法：area、PI、_ini、array
不合法：456p、code―y、w.w、a&b
区分大小写：Page、page
一、关键字： if else
二、预定义标识符：printf define
三、用户标识符：见其名知其意 color age

2.常量
整型常量：12、-1、0
实型常量：3.14、-2.28、0.0
字符型常量：‘a’、‘b’
字符串常量：“nice”“it学堂”

3.变量
整型变量：12、-1、0
实型变量：3.14、-2.28、0.0
字符型常量：‘a’、‘b’
转义字符：/
	
字符串常量：“nice”“it学堂”

4.整型数据：定义用int[scanf用d%]
八进制、十进制、十六进制
short int：2个字节，16位的2进制数
int
long int
unsigned（无符号整型：把正负号取消，只能表示非负数）

5.实型数据\浮点型数据  
定义用 float （4个字节）[scanf使用f%]、double（8个字节更精确）[scanf使用lf%]
小数形式表示：0.2、 .2 、0.0
指数形式表示：
幂的方式表示：0.23026*101=0.23026E1（E的大小写均可，E的前后不能有空格、后面必须是整数）

6.算术表达式：
+ - * / % 
赋值表达式（=）逗号表达式（，）
单目运算符：+5 、 -3[表示正负号]
双目运算符：2+3 、 5%3
注意：运算结果的类型与参加运算的类型一致 1/2=0  、1.0/2=0.5
・类型转换：
隐式（自动）类型转换[1.0/2=0.5]
显式（强制）类型转换[int x=1.0/2 x=0.0000]（不进行四舍五入）

7.赋值表达式
・变量名=表达式
・复合赋值表达式：n=n+1 简写为n+=1（+=、-=、*=、/=、%=）

8.自加、自减和逗号表达式
i++、i=i+1,、i+=1、（++i）
t=i++ [先把i的值给t，i在自加]和 t=++i[先i自加，再把值给t]不一样
表达式1，表达式2，表达式3...表达式n[逗号表达式的优先级低于赋值运算符]

9.字符和字节
・一个字节=8个bit位
・一个字符=一个字母或符号占一个字节
・一个十进制数字先转换为二进制数字看占几个bit位
・一个汉字占用两个字节

第二章：顺序结构
顺序结构、选择结构、循环结构

1.数据输出：printf("格式控制符"，输出项1，输出项2...);
・字符型：char  %c  %s字符串（回车，空格，TAB也能被读入）
・整型：  int   [%d  %ld  %hd十进制] [ %o  %#o八进制]  [%x  %X  %#x  %#X十六进制]
・实型（浮点型）; float  double %f  %lf
・指数型：float  double %e %E

2.数据输入：scanf("格式控制符"，&输入项1，&输入项2...);

3.复合语句和空语句

・结构定义语句末尾不加分号(;)
・功能执行语句末尾加分号（;）

第三章：选择结构
1.关系运算
・成立：1  不成立：0
・关系运算符：
<小于；<=小于等于；>大于；>=大于等于[以上四个优先级相同（高）]
== 等于；！= 不等于[这两个优先级相同（低)]

2.逻辑运算

・逻辑运算符
逻辑与运算，符号为&&，形式为a&&b;
逻辑或运算，符号为||，形式为a||b;
逻辑非运算，符号为!，形式为!a。

・当逻辑运算写在一起的时候，逻辑非!运算优先级最高，其次为逻辑与&&，最低为逻辑或||。

・容易在判断时出线短路:算术运算  关系运算  &&  ||  赋值  逗号表达式

3.if语句和用if语句构成的选择结构
・if（表达式）语句[体]
・if（表达式）语句[体]  else语句[体]

・switch（表达式）
{
	case 1：语句1;
	break;
	case 2：语句2;
	break;	
	case 3：语句3;
	break;
	...
	default：语句;
}

・goto语句：
・goto line1;[容易陷入死循环]

第四章：循环结构
while（条件表达式，满足才执行）
{
	循环体;
}

do
{
	循环体;
} 
while（条件表达式）//满足while里的条件继续循环



for(初始化;条件判断;自增量)
{
	循环体;
}

・break;用于完全结束一个循环，跳出循环体执行循环后面的语句。在switch case里，只能用break，而不能用continue
・continue;可以理解为continue是跳过当次循环中剩下的语句，执行下一次循环。

第五章：字符型数据
・字符：‘A’，‘a’，‘ ’
・字符串：‘AB’，‘abc’//ASCⅡ码
・转义字符：/
get char();//读入一个字符，相当于scanf("%c");
put char();//输出一个字符，相当于printf("%c");
例：
char ch;
ch=get char();
put char(ch);

第六章：函数
1.函数说明，记得写在前面，加;

2.不带返回值的函数调用
带返回值的函数调用
・实参到形参，单向按值传递[实参给形参]

3.本地变量的规则
・本地变量是定义在块内的
・它可以是定义在函数的块内也可以定义在语句的块内
・甚至可以随便拉一对大括号来定义变量
・程序运行进入这个块之前，其中的变量不存在，离开这个块，就消失了
・块外面定义的变量在里面仍然有效
・块里面定义了和外面同名的变量则掩盖了外面的
・不能在块内定义同名的变量
・本地变量不会被默认初始化
・参数在调用的时候被初始化了

4.逗号运算符
・f(a,b) 两个参数
・f((a,b)) 一个参数

5.函数里的函数
・C语言不允许函数嵌套定义


第七章：数组

1.定义数组
・<类型>变量名称[元素数量]；
・int grades[100]；
・double weight[20]；
・元素数量必须是整数
・C99之前：元素数量必须是编译时刻确定的字面量

2.数组
・是一种容器（放东西的东西），特点是：
・其中所有的元素具有相同的数据类型
・一旦创建，不能改变大小
・*（数组中的元素在内存中是连续依次排列的）

int a[10]
・一个int的数组
・10个单元：a[0],a[1]..…a[91
a[o]|a[1]|a[2]a[3]a[4]|a[5]|a[6]|a[7]a[8]a[9]
・每个单元就是一个int类型的变量
・可以出现在赋值的左边或右边：
a[2]=a[1]+6；
・在赋值左边的叫做左值

有效的下标范围：[0，数组的大小-1]

长度为0的数组
・int a[0]
・可以存在，但是无用



第八章：地址和指针
・注意：指针变量的类型要与其所指向的变量类型相同
・函数之间地址值的传递
unsigned int*p=(unsigned int*)0x20000048;

unsigned int *p 表示定义变量unsigned int类型的指针变量p
(unsigned int * ) 0x20000048 表示把0x20000048强制转换为unsigned int指针类型，默认情况下0x20000048为整型
这样一来0x20000048就可以表示一个地址了，然后再赋值给p
